# Generated by Django 4.1.5 on 2023-01-13 22:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djangoffice.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('access', models.CharField(choices=[('A', 'Admin'), ('M', 'Manager'), ('P', 'PM'), ('U', 'User')], max_length=1)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ArtifactType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('disabled', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('company_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=50)),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('notes', models.TextField(blank=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('mobile_number', models.CharField(blank=True, max_length=20)),
                ('fax_number', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('street_line_1', models.CharField(max_length=100)),
                ('street_line_2', models.CharField(blank=True, max_length=100)),
                ('town_city', models.CharField(max_length=100, verbose_name='Town/city')),
                ('county', models.CharField(blank=True, max_length=100)),
                ('postcode', models.CharField(max_length=10)),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('limit', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(unique=True)),
                ('date', models.DateField(editable=False)),
                ('type', models.CharField(choices=[('D', 'Date Restricted'), ('W', 'Whole Job')], max_length=1)),
                ('start_period', models.DateField(blank=True, null=True)),
                ('end_period', models.DateField(blank=True, null=True)),
                ('amount_invoiced', models.DecimalField(decimal_places=2, max_digits=8)),
                ('amount_received', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('adjustment', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('comment', models.TextField(blank=True)),
                ('pdf', models.FileField(blank=True, upload_to='invoices')),
            ],
            options={
                'verbose_name': 'Invoice',
                'permissions': [('can_edit_invoice_settings', 'Can edit Invoice settings')],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('number', models.PositiveIntegerField(unique=True)),
                ('reference', models.CharField(blank=True, max_length=16)),
                ('reference_date', models.DateField(blank=True, null=True)),
                ('add_reference', models.CharField(blank=True, max_length=16)),
                ('add_reference_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Q', 'Quote'), ('L', 'Live'), ('S', 'Suspended'), ('C', 'Completed'), ('A', 'Archived')], max_length=1)),
                ('notes', models.TextField(blank=True)),
                ('invoice_notes', models.TextField(blank=True)),
                ('contingency', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('created_at', models.DateTimeField(editable=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Expected end date')),
                ('fee_basis', models.CharField(blank=True, choices=[('S', 'Set Fee'), ('T', 'Time Charged'), ('P', 'Percentage')], max_length=1)),
                ('fee_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('fee_currency', models.CharField(choices=[('GBP', 'GBP'), ('EUR', 'Euro')], max_length=3)),
                ('missed_end_date', models.BooleanField(default=False, verbose_name='Notified about missed end date')),
                ('over_hours', models.BooleanField(default=False, verbose_name='Notified about going over hours')),
                ('architect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='architected_jobs', to=settings.AUTH_USER_MODEL)),
                ('billing_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billing_contact_jobs', to='djangoffice.contact')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='djangoffice.client')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='directed_jobs', to=settings.AUTH_USER_MODEL)),
                ('job_contacts', models.ManyToManyField(blank=True, null=True, related_name='job_contact_jobs', to='djangoffice.contact')),
                ('primary_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_contact_jobs', to='djangoffice.contact')),
                ('project_coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coordinated_jobs', to=settings.AUTH_USER_MODEL)),
                ('project_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SQLReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('access', models.CharField(choices=[('A', 'Admin'), ('M', 'Manager'), ('P', 'PM'), ('U', 'User')], max_length=1)),
                ('query', models.TextField(validators=[djangoffice.validators.isSafeishQuery])),
            ],
            options={
                'verbose_name': 'SQL report',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimate_hours', models.DecimalField(decimal_places=2, max_digits=6)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('remaining', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('remaining_overridden', models.BooleanField(help_text="This field indicates whether or not the Task's remaining field has been overridden by a user.")),
                ('assigned_users', models.ManyToManyField(help_text='These users will be able to book time against this task.', related_name='tasks', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='djangoffice.job')),
            ],
            options={
                'permissions': [('can_edit_task_settings', 'Can edit task settings')],
            },
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('U', 'User'), ('P', 'PM'), ('M', 'Manager'), ('A', 'Administrator')], max_length=1)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('mobile_number', models.CharField(blank=True, max_length=20)),
                ('login_attempts', models.SmallIntegerField(default=3, help_text='The number of unsuccessful login attempts allowed on this account until it is disabled.')),
                ('disabled', models.BooleanField(default=False, help_text='Users are never physically removed from the database - they are marked as disabled to preserve all data associated with them.', verbose_name='Mark as disabled')),
                ('managed_users', models.ManyToManyField(blank=True, null=True, related_name='managers', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Timesheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_commencing', models.DateField(validators=[djangoffice.validators.isWeekCommencingDate])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timesheets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('can_edit_timesheet_settings', 'Can edit timesheet settings')],
                'unique_together': {('user', 'week_commencing')},
            },
        ),
        migrations.CreateModel(
            name='TimeEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_commencing', models.DateField(validators=[djangoffice.validators.isWeekCommencingDate])),
                ('mon', models.DecimalField(blank=True, decimal_places=2, max_digits=4)),
                ('tue', models.DecimalField(blank=True, decimal_places=2, max_digits=4)),
                ('wed', models.DecimalField(blank=True, decimal_places=2, max_digits=4)),
                ('thu', models.DecimalField(blank=True, decimal_places=2, max_digits=4)),
                ('fri', models.DecimalField(blank=True, decimal_places=2, max_digits=4)),
                ('sat', models.DecimalField(blank=True, decimal_places=2, max_digits=4)),
                ('sun', models.DecimalField(blank=True, decimal_places=2, max_digits=4)),
                ('overtime', models.DecimalField(blank=True, decimal_places=2, max_digits=4)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('billable', models.BooleanField(default=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_time_entries', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='djangoffice.invoice')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='djangoffice.task')),
                ('timesheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='djangoffice.timesheet')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Time entries',
            },
        ),
        migrations.AddField(
            model_name='task',
            name='task_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='djangoffice.tasktype'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='djangoffice.job'),
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('billable', models.BooleanField(default=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_expenses', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='djangoffice.invoice')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='djangoffice.job')),
                ('timesheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='djangoffice.timesheet')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='djangoffice.expensetype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='client',
            name='contacts',
            field=models.ManyToManyField(related_name='clients', to='djangoffice.contact'),
        ),
        migrations.CreateModel(
            name='Artifact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='artifacts')),
                ('description', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(editable=False)),
                ('access', models.CharField(choices=[('A', 'Admin'), ('M', 'Manager'), ('P', 'PM'), ('U', 'User')], max_length=1)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artifacts', to='djangoffice.job')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='artifacts', to='djangoffice.artifacttype')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('T', 'Top')], max_length=1)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completed', models.BooleanField()),
                ('completed_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_activities', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='djangoffice.contact')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_activities', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='djangoffice.job')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='djangoffice.activitytype')),
            ],
            options={
                'verbose_name_plural': 'Activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Vacation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('entitlement', models.DecimalField(decimal_places=2, max_digits=5)),
                ('carry_over', models.DecimalField(decimal_places=2, default='0.00', max_digits=5)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vacations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'year')},
            },
        ),
        migrations.CreateModel(
            name='UserRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_from', models.DateField()),
                ('standard_rate', models.DecimalField(decimal_places=2, max_digits=6)),
                ('overtime_rate', models.DecimalField(decimal_places=2, max_digits=6)),
                ('editable', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-effective_from', 'user'],
                'unique_together': {('user', 'effective_from')},
            },
        ),
        migrations.CreateModel(
            name='TaskTypeRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_from', models.DateField()),
                ('standard_rate', models.DecimalField(decimal_places=2, max_digits=6)),
                ('overtime_rate', models.DecimalField(decimal_places=2, max_digits=6)),
                ('editable', models.BooleanField(default=True)),
                ('task_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rates', to='djangoffice.tasktype')),
            ],
            options={
                'verbose_name': 'Task type rate',
                'ordering': ['-effective_from', 'task_type'],
                'unique_together': {('task_type', 'effective_from')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='task',
            unique_together={('job', 'task_type')},
        ),
    ]
